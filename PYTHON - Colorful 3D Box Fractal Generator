import matplotlib.pyplot as plt
import numpy as np

def generate_cube_fractal(n_iterations=3, x_range=(-1, 1), y_range=(-1, 1), z_range=(-1, 1)):
    # Define the initial cube vertices
    vertices = np.array([
        [-1, -1, -1],
        [-1, -1, 1],
        [-1, 1, -1],
        [-1, 1, 1],
        [1, -1, -1],
        [1, -1, 1],
        [1, 1, -1],
        [1, 1, 1]
    ])
    
    # Define the initial cube edges
    edges = np.array([
        [0, 1],
        [0, 2],
        [0, 4],
        [1, 3],
        [1, 5],
        [2, 3],
        [2, 6],
        [3, 7],
        [4, 5],
        [4, 6],
        [5, 7],
        [6, 7]
    ])
    
    # Generate the fractal by iterating through each edge and subdividing it
    for i in range(n_iterations):
        new_vertices = []
        new_edges = []
        
        for edge in edges:
            p1 = vertices[edge[0]]
            p2 = vertices[edge[1]]
            new_points = []
            
            # Subdivide the edge by adding 4 new vertices and 6 new edges
            for j in range(4):
                new_point = (p1 * (3 - j) + p2 * j) / 3
                new_vertices.append(new_point)
                new_points.append(len(new_vertices) - 1)
                
            new_edges.append([new_points[0], new_points[1]])
            new_edges.append([new_points[0], new_points[2]])
            new_edges.append([new_points[0], new_points[3]])
            new_edges.append([new_points[1], new_points[2]])
            new_edges.append([new_points[1], new_points[3]])
            new_edges.append([new_points[2], new_points[3]])
        
        vertices = np.array(new_vertices)
        edges = np.array(new_edges)
    
    # Plot the fractal using matplotlib
    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')
    
    for edge in edges:
        x = [vertices[edge[0]][0], vertices[edge[1]][0]]
        y = [vertices[edge[0]][1], vertices[edge[1]][1]]
        z = [vertices[edge[0]][2], vertices[edge[1]][2]]
        
        ax.plot(x, y, z, color='purple')
    
    ax.set_xlim(x_range)
    ax.set_ylim(y_range)
    ax.set_zlim(z_range)
    ax.set_xlabel('X')
    ax.set_ylabel('Y')
    ax.set_zlabel('Z')
    plt.show()
