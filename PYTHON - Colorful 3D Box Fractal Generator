import pygame
import math

pygame.init()

# Set up the display window
width = 800
height = 600
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("Box Fractal Zoom Animation")

# Set up the clock
clock = pygame.time.Clock()

# Define the colors to use
colors = [
    (255, 0, 0),   # red
    (255, 127, 0), # orange
    (255, 255, 0), # yellow
    (0, 255, 0),   # green
    (0, 0, 255),   # blue
    (75, 0, 130),  # indigo
    (143, 0, 255), # violet
]

# Define the starting box size and position
box_size = 400
box_x = width / 2 - box_size / 2
box_y = height / 2 - box_size / 2

# Define the recursive function to draw the box fractal
def draw_box(x, y, size, depth):
    if depth == 0:
        return

    # Draw the box
    pygame.draw.rect(screen, colors[depth % len(colors)], (x, y, size, size))

    # Recursively draw the four smaller boxes
    new_size = size / 3
    draw_box(x, y, new_size, depth - 1)
    draw_box(x + new_size * 2, y, new_size, depth - 1)
    draw_box(x, y + new_size * 2, new_size, depth - 1)
    draw_box(x + new_size * 2, y + new_size * 2, new_size, depth - 1)

# Define the main loop
running = True
zoom = 1
while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Clear the screen
    screen.fill((0, 0, 0))

    # Update the box size and position based on the zoom level
    box_size = 400 / zoom
    box_x = width / 2 - box_size / 2
    box_y = height / 2 - box_size / 2

    # Draw the box fractal
    draw_box(box_x, box_y, box_size, 5)

    # Update the zoom level
    zoom *= 1.001

    # Display the screen
    pygame.display.flip()

    # Limit the frame rate
    clock.tick(60)

pygame.quit()

# UPDATED - DUE TO AN ERROR IT WAS NOT RUNNING - FIXED
# STILL HAS TO FIX SOME ISSUES, BUT NOW THE ANIMATION RUNS
