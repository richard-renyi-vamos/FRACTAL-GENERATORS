import tkinter as tk
from tkinter import simpledialog
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg

# Fractal Generation Function
def generate_fractal(xmin, xmax, ymin, ymax, width, height, max_iter):
    x = np.linspace(xmin, xmax, width)
    y = np.linspace(ymin, ymax, height)
    X, Y = np.meshgrid(x, y)
    C = X + 1j * Y
    Z = np.zeros_like(C)
    output = np.zeros(C.shape, dtype=int)

    for i in range(max_iter):
        mask = np.abs(Z) < 2
        Z[mask] = Z[mask] ** 2 + C[mask]
        output += mask

    return output

# Update Fractal Display
def update_fractal():
    xmin, xmax, ymin, ymax = -2.0, 1.0, -1.5, 1.5
    width, height = 500, 500
    max_iter = int(iter_entry.get())

    fractal = generate_fractal(xmin, xmax, ymin, ymax, width, height, max_iter)
    ax.clear()
    ax.imshow(fractal, extent=(xmin, xmax, ymin, ymax), cmap='hot', interpolation='bilinear')
    canvas.draw()

# Create Tkinter GUI
root = tk.Tk()
root.title("Fractal Explorer")

# Add Entry for Iterations
tk.Label(root, text="Max Iterations:").pack(side=tk.LEFT)
iter_entry = tk.Entry(root)
iter_entry.insert(0, "100")
iter_entry.pack(side=tk.LEFT)

# Add Update Button
update_button = tk.Button(root, text="Update Fractal", command=update_fractal)
update_button.pack(side=tk.LEFT)

# Create a Matplotlib Plot inside the Tkinter GUI
fig, ax = plt.subplots()
canvas = FigureCanvasTkAgg(fig, master=root)
widget = canvas.get_tk_widget()
widget.pack(side=tk.TOP, fill=tk.BOTH, expand=True)

update_fractal()  # Generate initial fractal

root.mainloop()
